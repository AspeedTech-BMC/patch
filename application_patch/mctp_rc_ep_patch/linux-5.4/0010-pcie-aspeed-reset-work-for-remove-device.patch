From bda44dbb1e85bd148bf00730a3377c1825e5d834 Mon Sep 17 00:00:00 2001
From: ryan_chen <ryan_chen@aspeedtech.com>
Date: Mon, 1 Aug 2022 13:42:11 +0800
Subject: [PATCH 10/10] pcie: aspeed: reset work for remove device

This patch uses a for loop to iterate to find the device to remove.

Signed-off-by: ryan_chen <ryan_chen@aspeedtech.com>
Change-Id: I059ef2121c70e4d8b014c9adb9bf9b2aa4a42d18
(cherry picked from commit eaa992812906bcb1236e58013a27ccc933b8d45a)
---
 drivers/pci/controller/pcie-aspeed.c | 40 +++++++---------------------
 1 file changed, 10 insertions(+), 30 deletions(-)

diff --git a/drivers/pci/controller/pcie-aspeed.c b/drivers/pci/controller/pcie-aspeed.c
index 3ce9fbda523e..32fbdef1b96e 100644
--- a/drivers/pci/controller/pcie-aspeed.c
+++ b/drivers/pci/controller/pcie-aspeed.c
@@ -864,47 +864,28 @@ static void aspeed_pcie_reset_work(struct work_struct *work)
 {
 	struct aspeed_pcie *pcie = container_of(work, typeof(*pcie), rst_dwork.work);
 	struct pci_host_bridge *host = pci_host_bridge_from_priv(pcie);
-	struct pci_dev *dev;
-	u16 command;
+	struct pci_bus *parent = host->bus;
+	struct pci_dev *dev, *temp;
 	u32 link_sts = 0;
+	u16 command;
 
 	pci_lock_rescan_remove();
 
-	dev = pci_get_domain_bus_and_slot(pcie->domain, 130, 0);
-	if (dev) {
-		pci_stop_and_remove_bus_device(dev);
-
-		pci_read_config_word(dev, PCI_COMMAND, &command);
-		command &= ~(PCI_COMMAND_MASTER | PCI_COMMAND_SERR);
-		command |= PCI_COMMAND_INTX_DISABLE;
-		pci_write_config_word(dev, PCI_COMMAND, command);
-
-		pci_dev_put(dev);
-	}
-
-	dev = pci_get_domain_bus_and_slot(pcie->domain, 129, 0);
-	if (dev) {
+	list_for_each_entry_safe_reverse(dev, temp, &parent->devices,
+					  bus_list) {
+		pci_dev_get(dev);
 		pci_stop_and_remove_bus_device(dev);
-
+		/*
+		 * Ensure that no new Requests will be generated from
+		 * the device.
+		 */
 		pci_read_config_word(dev, PCI_COMMAND, &command);
 		command &= ~(PCI_COMMAND_MASTER | PCI_COMMAND_SERR);
 		command |= PCI_COMMAND_INTX_DISABLE;
 		pci_write_config_word(dev, PCI_COMMAND, command);
-
 		pci_dev_put(dev);
 	}
 
-	dev = pci_get_domain_bus_and_slot(pcie->domain, 128, PCI_DEVFN(8, 0));
-	if (dev) {
-		pci_stop_and_remove_bus_device(dev);
-
-		pci_read_config_word(dev, PCI_COMMAND, &command);
-		command &= ~(PCI_COMMAND_MASTER | PCI_COMMAND_SERR);
-		command |= PCI_COMMAND_INTX_DISABLE;
-		pci_write_config_word(dev, PCI_COMMAND, command);
-
-		pci_dev_put(dev);
-	}
 	if (pcie->perst_rc_out)
 		gpiod_set_value(pcie->perst_rc_out, 0);
 	reset_control_assert(pcie->phy_rst);
@@ -914,7 +895,6 @@ static void aspeed_pcie_reset_work(struct work_struct *work)
 	reset_control_deassert(pcie->phy_rst);
 	mdelay(10);
 
-
 	regmap_read(pcie->pciephy, ASPEED_PCIE_LINK, &link_sts);
 	if (link_sts & PCIE_LINK_STS)
 		dev_info(pcie->dev, "PCIE- Link up\n");
-- 
2.25.1

