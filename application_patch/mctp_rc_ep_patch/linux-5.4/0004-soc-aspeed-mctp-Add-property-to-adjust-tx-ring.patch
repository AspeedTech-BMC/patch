From fef817444d9a3682c8108ed115c4eb411e0ef6f9 Mon Sep 17 00:00:00 2001
From: Billy Tsai <billy_tsai@aspeedtech.com>
Date: Mon, 11 Jul 2022 17:51:42 +0800
Subject: [PATCH 04/10] soc: aspeed: mctp: Add property to adjust tx ring.

Increasing aspeed,tx-ring-count can avoid the overflow of the ring buffer
caused by the client process send burst packets.

Signed-off-by: Billy Tsai <billy_tsai@aspeedtech.com>
Change-Id: I13cefb89c00143d6668c343bb1af31e4f1fbf04d
---
 drivers/soc/aspeed/aspeed-mctp.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/soc/aspeed/aspeed-mctp.c b/drivers/soc/aspeed/aspeed-mctp.c
index ea958bf2293a..27923e3e10b9 100644
--- a/drivers/soc/aspeed/aspeed-mctp.c
+++ b/drivers/soc/aspeed/aspeed-mctp.c
@@ -296,6 +296,8 @@ struct aspeed_mctp {
 	u32 rx_packet_count;
 	/* Rx pointer ring size */
 	u32 rx_ring_count;
+	/* Tx pointer ring size */
+	u32 tx_ring_count;
 };
 
 struct mctp_client {
@@ -530,7 +532,7 @@ static struct mctp_client *aspeed_mctp_client_alloc(struct aspeed_mctp *priv)
 
 	kref_init(&client->ref);
 	client->priv = priv;
-	ptr_ring_init(&client->tx_queue, TX_RING_COUNT, GFP_KERNEL);
+	ptr_ring_init(&client->tx_queue, priv->tx_ring_count, GFP_KERNEL);
 	ptr_ring_init(&client->rx_queue, priv->rx_ring_count, GFP_ATOMIC);
 
 out:
@@ -2063,6 +2065,11 @@ static int aspeed_mctp_probe(struct platform_device *pdev)
 	if (ret)
 		priv->rx_ring_count = RX_RING_COUNT;
 
+	ret = device_property_read_u32(priv->dev, "aspeed,tx-ring-count",
+				       &priv->tx_ring_count);
+	if (ret)
+		priv->tx_ring_count = TX_RING_COUNT;
+
 	aspeed_mctp_drv_init(priv);
 
 	ret = aspeed_mctp_resources_init(priv);
-- 
2.25.1

